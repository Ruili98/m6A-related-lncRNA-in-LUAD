#install.packages("ggpubr")

#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("limma")


#Cite package
library(limma)
library(ggpubr)
gene="METTL3"         #Gene name
setwd("C:\\Users\\riskGene")      #set dir

#Define the function of drawing graphics
riskGene=function(riskFile=null, expFile=null, boxFile=null){
	#Read expression data file
	rt=read.table(expFile, header=T, sep="\t", check.names=F)
	rt=as.matrix(rt)
	rownames(rt)=rt[,1]
	exp=rt[,2:ncol(rt)]
	dimnames=list(rownames(exp),colnames(exp))
	data=matrix(as.numeric(as.matrix(exp)),nrow=nrow(exp),dimnames=dimnames)
	data=avereps(data)
	data=data[rowMeans(data)>0,]
	
	#Delete normal samples
	cohort=sapply(strsplit(colnames(data),"\\-"),"[",4)
	cohort=sapply(strsplit(cohort,""),"[",1)
	cohort=gsub("2", "1", cohort)
	data=data[,cohort==0]
	
	#Extract target gene expression
	data=rbind(data, gene=data[gene,])
	exp=t(data[c("gene",gene),])
	row.names(exp)=gsub("(.*?)\\-(.*?)\\-(.*?)\\-.*", "\\1\\-\\2\\-\\3\\",  row.names(exp))
	exp=avereps(exp)
	
	#Read the risk data file
	risk=read.table(riskFile, header=T, sep="\t", check.names=F, row.names=1)
	
	#Merge data
	sameSample=intersect(row.names(exp), row.names(risk))
	exp=exp[sameSample,]
	exp[exp>quantile(exp,0.975)]=quantile(exp,0.975)
	risk=risk[sameSample,]
	data=cbind(as.data.frame(exp), as.data.frame(risk))
	
	#Set comparison cohort
	data$risk=ifelse(data$risk=="high", "High-risk", "Low-risk")
	cohort=levels(factor(data$risk))
	data$risk=factor(data$risk, levels=c("Low-risk", "High-risk"))
	comp=combn(cohort,2)
	my_comparisons=list()
	for(i in 1:ncol(comp)){my_comparisons[[i]]<-comp[,i]}
	
	#draw boxplot
	boxplot=ggboxplot(data, x="risk", y="gene", color="risk",
			          xlab="",
			          ylab=paste(gene, "expression"),
			          legend.title="",
			          palette = c("blue", "red"),
			          add = "jitter")+ 
		    stat_compare_means(comparisons = my_comparisons)
	
	#export the figure
	pdf(file=boxFile, width=5, height=4.5)
	print(boxplot)
	dev.off()
}

riskGene(riskFile="allRisk.txt", expFile="symbol.txt", boxFile="all.boxplot.pdf")
riskGene(riskFile="trainingRisk.txt", expFile="symbol.txt", boxFile="training.boxplot.pdf")
riskGene(riskFile="testingRisk.txt", expFile="symbol.txt", boxFile="testing.boxplot.pdf")


